// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Member {
  id             BigInt    @id @default(autoincrement())
  name           String    @db.VarChar(20)
  gender         String    @db.VarChar(10)
  age            Int
  address        String    @db.VarChar(40)
  specAddress    String    @db.VarChar(40)
  phoneNum       String    @db.VarChar(13)
  status         String    @db.VarChar(15)
  inactiveDate   DateTime  @db.DateTime(6)
  socialType     String    @db.VarChar(10)
  createdAt      DateTime  @default(now()) @db.DateTime(6)
  updatedAt      DateTime  @updatedAt @db.DateTime(6)
  email          String    @db.VarChar(50)
  point          Int

  memberPrefernces MemberPrefer[]
  memberMissions   MemberMission[]
  reviews          Review[]
  memberAgreements MemberAgree[]

  @@map("member")
}

model Region {
  id        BigInt     @id @default(autoincrement())
  name      String     @db.VarChar(20)
  createdAt DateTime   @default(now()) @db.DateTime(6)
  updatedAt DateTime   @updatedAt @db.DateTime(6)

  stores    Store[]

  @@map("region")
}

model Store {
  id          BigInt     @id @default(autoincrement())
  region      Region     @relation(fields: [regionId], references: [id])
  regionId    BigInt     @map("region_id")
  name        String     @db.VarChar(50)
  address     String     @db.VarChar(50)
  score       Float
  createdAt   DateTime   @default(now()) @db.DateTime(6)
  updatedAt   DateTime   @updatedAt @db.DateTime(6)

  missions    Mission[]
  reviews     Review[]
  reviewImages ReviewImage[]

  @@map("store")
}

model Terms {
  id          BigInt     @id @default(autoincrement())
  title       String     @db.VarChar(20)
  body        String     @db.Text
  optional    Boolean
  createdAt   DateTime   @default(now()) @db.DateTime(6)
  updatedAt   DateTime   @updatedAt @db.DateTime(6)

  memberAgreements MemberAgree[]
  
  @@map("terms")
}

model FoodCategory {
  id          BigInt     @id @default(autoincrement())
  name        String     @db.VarChar(15)
  column4     String     @db.VarChar(15)

  memberPrefer MemberPrefer[]

  @@map("food_category")
}

model MemberPrefer {
  id          BigInt     @id @default(autoincrement())
  member      Member     @relation(fields: [memberId], references: [id])
  memberId    BigInt     @map("member_id")
  category    FoodCategory @relation(fields: [categoryId], references: [id])
  categoryId  BigInt     @map("category_id")
  createdAt   DateTime   @default(now()) @db.DateTime(6)
  updatedAt   DateTime   @updatedAt @db.DateTime(6)

  @@map("member_prefer")
}

model Mission {
  id          BigInt     @id @default(autoincrement())
  store       Store      @relation(fields: [storeId], references: [id])
  storeId     BigInt     @map("store_id")
  reward      Int
  deadline    DateTime
  missionSpec String     @db.Text
  createdAt   DateTime   @default(now()) @db.DateTime(6)
  updatedAt   DateTime   @updatedAt @db.DateTime(6)

  memberMissions MemberMission[]

  @@map("mission")
}

model MemberMission {
  id          BigInt     @id @default(autoincrement())
  member      Member     @relation(fields: [memberId], references: [id])
  memberId    BigInt     @map("member_id")
  mission     Mission    @relation(fields: [missionId], references: [id])
  missionId   BigInt     @map("mission_id")
  status      String     @db.VarChar(15)
  createdAt   DateTime   @default(now()) @db.DateTime(6)
  updatedAt   DateTime   @updatedAt @db.DateTime(6)

  @@map("member_mission")
}

model Review {
  id          BigInt     @id @default(autoincrement())
  member      Member     @relation(fields: [memberId], references: [id])
  memberId    BigInt     @map("member_id")
  store       Store      @relation(fields: [storeId], references: [id])
  storeId     BigInt     @map("store_id")
  body        String     @db.Text
  score       Float
  createdAt   DateTime   @default(now()) @db.DateTime(6)

  reviewImages ReviewImage[]

  @@map("review")
}

model ReviewImage {
  id          BigInt     @id @default(autoincrement())
  review      Review     @relation(fields: [reviewId], references: [id])
  reviewId    BigInt     @map("review_id")
  store       Store      @relation(fields: [storeId], references: [id])
  storeId     BigInt     @map("store_id")
  imageUrl    String     @db.Text
  createdAt   DateTime   @default(now()) @db.DateTime(6)
  updatedAt   DateTime   @updatedAt @db.DateTime(6)

  @@map("review_image")
}

model MemberAgree {
  id          BigInt     @id @default(autoincrement())
  member      Member     @relation(fields: [memberId], references: [id])
  memberId    BigInt     @map("member_id")
  terms       Terms      @relation(fields: [termsId], references: [id])
  termsId     BigInt     @map("terms_id")
  createdAt   DateTime   @default(now()) @db.DateTime(6)
  updatedAt   DateTime   @updatedAt @db.DateTime(6)

  @@map("member_agree")
}